<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2012 Grid Dynamics Consulting Services, Inc, All Rights Reserved
  ~ http://www.griddynamics.com
  ~
  ~ This library is free software; you can redistribute it and/or modify it under the terms of
  ~ the GNU Lesser General Public License as published by the Free Software Foundation; either
  ~ version 2.1 of the License, or any later version.
  ~
  ~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  ~ AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  ~ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  ~ DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
  ~ FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  ~ DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  ~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  ~ CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  ~ OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  ~ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  -->

<beans:beans
        xmlns="http://www.griddynamics.com/schema/jagger"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation=
                "
        http://www.griddynamics.com/schema/jagger
        http://www.griddynamics.com/schema/jagger.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd"
        >

    <beans:import resource="tasks-new.conf.xml"/>


        <configuration id="testNewConfiguration">

            <latency-percentiles>
                <percentile>99</percentile>
                <percentile>98</percentile>
                <percentile>97</percentile>
                <percentile>95</percentile>
                <percentile>90</percentile>
                <percentile>95</percentile>
                <percentile>60</percentile>
            </latency-percentiles>

            <test-suite id="ciJaggerTestSuite">

            <!--&lt;!&ndash; Per threads tests &ndash;&gt;-->

                <!--<test-group id="sleep-service-5ms-1000-samples-per-thread-1-thread">-->
                    <!--<test testDescription="sleep-service-5ms">-->
                        <!--<load xsi:type="load-threads" count="1" tickInterval="${test.configuration.tickinterval}" />-->
                        <!--<termination xsi:type="termination-iterations" iterations="100"/>-->
                    <!--</test>-->
                <!--</test-group>-->

                <!--<test-group id="sleep-service-5ms-http-query-provider">-->
                    <!--<test testDescription="sleep-service-5ms-simple-http-query-provider">-->
                        <!--<load xsi:type="load-threads" count="1" tickInterval="${test.configuration.tickinterval}" />-->
                        <!--<termination xsi:type="termination-iterations" iterations="100"/>-->
                    <!--</test>-->
                <!--</test-group>-->


                <!--<test-group id="sleep-service-50ms-1000-samples-per-thread-1-thread">-->
                    <!--<test testDescription="sleep-service-50ms">-->
                        <!--<load xsi:type="load-threads" count="1" tickInterval="${test.configuration.tickinterval}" />-->
                        <!--<termination xsi:type="termination-iterations" iterations="100"/>-->
                    <!--</test>-->
                <!--</test-group>-->

               <!---->

                <!--<test-group id="sleep-service-5ms-1000-samples-per-thread-50-threads">-->
                    <!--<test testDescription="sleep-service-5ms">-->
                        <!--<load xsi:type="load-threads" count="50" tickInterval="${test.configuration.tickinterval}" />-->
                        <!--<termination xsi:type="termination-iterations" iterations="5000"/>-->
                    <!--</test>-->
                <!--</test-group>-->

                <!--<test-group id="sleep-service-50ms-1000-samples-per-thread-50-threads">-->
                    <!--<test testDescription="sleep-service-50ms">-->
                        <!--<load xsi:type="load-threads" count="50" tickInterval="${test.configuration.tickinterval}" />-->
                        <!--<termination xsi:type="termination-iterations" iterations="5000"/>-->
                    <!--</test>-->
                <!--</test-group>-->

              <!---->

                <!--<test-group id="sleep-service-50-150ms-1000-samples-per-thread-50-threads">-->
                    <!--<test testDescription="sleep-service-50-150ms">-->
                        <!--<load xsi:type="load-threads" count="50" tickInterval="${test.configuration.tickinterval}" />-->
                        <!--<termination xsi:type="termination-iterations" iterations="5000"/>-->
                    <!--</test>-->
                <!--</test-group>-->



            <!--&lt;!&ndash;Per time tests&ndash;&gt;-->

                <!--<test-group id="sleep-service-5ms-5-min-1-thread">-->
                    <!--<test testDescription="sleep-service-5ms">-->
                        <!--<load xsi:type="load-threads" count="1" tickInterval="500" />-->
                        <!--<termination xsi:type="termination-duration" duration="30s"/>-->
                    <!--</test>-->
                <!--</test-group>-->


                <!--<test-group id="sleep-service-5ms-5-min-10-threads">-->
                    <!--<test testDescription="sleep-service-5ms">-->
                        <!--<load xsi:type="load-threads" count="10" tickInterval="500" />-->
                        <!--<termination xsi:type="termination-duration" duration="5m"/>-->
                    <!--</test>-->
                <!--</test-group>-->

                <!--<test-group id="sleep-service-50ms-5-min-10-threads">-->
                    <!--<test testDescription="sleep-service-50ms">-->
                        <!--<load xsi:type="load-threads" count="10" tickInterval="500" />-->
                        <!--<termination xsi:type="termination-duration" duration="5m"/>-->
                    <!--</test>-->
                <!--</test-group>-->

                <!--<test-group id="sleep-service-5ms-5-min-50-threads">-->
                    <!--<test testDescription="sleep-service-5ms">-->
                        <!--<load xsi:type="load-threads" count="50" tickInterval="500" />-->
                        <!--<termination xsi:type="termination-duration" duration="5m"/>-->
                    <!--</test>-->
                <!--</test-group>-->

                <!--<test-group id="sleep-service-50ms-5-min-50-threads">-->
                    <!--<test testDescription="sleep-service-50ms">-->
                        <!--<load xsi:type="load-threads" count="50" tickInterval="500" />-->
                        <!--<termination xsi:type="termination-duration" duration="5m"/>-->
                    <!--</test>-->
                <!--</test-group>-->

                <!--<test-group id="sleep-service-50-150ms-5-min-1-thread">-->
                    <!--<test testDescription="sleep-service-50-150ms">-->
                        <!--<load xsi:type="load-threads" count="1" tickInterval="500" />-->
                        <!--<termination xsi:type="termination-duration" duration="5m"/>-->
                    <!--</test>-->
                <!--</test-group>-->

                <!--<test-group id="sleep-service-50-150ms-5-min-10-threads">-->
                    <!--<test testDescription="sleep-service-50-150ms">-->
                        <!--<load xsi:type="load-threads" count="10" tickInterval="500" />-->
                        <!--<termination xsi:type="termination-duration" duration="5m"/>-->
                    <!--</test>-->
                <!--</test-group>-->

                <!--<test-group id="sleep-service-50-150ms-5-min-50-threads">-->
                    <!--<test testDescription="sleep-service-50-150ms">-->
                        <!--<load xsi:type="load-threads" count="50" tickInterval="500" />-->
                        <!--<termination xsi:type="termination-duration" duration="5m"/>-->
                    <!--</test>-->
                <!--</test-group>-->


            <!--TPS-->

                <test-group id="sleep-service-50-150ms-30-rps-2-min-4000-warmup">
                    <test testDescription="sleep-service-50-1500ms">
                        <load xsi:type="load-rps" value="50" tickInterval="500" maxThreadNumber="100" warmUpTime="1m"/>
                        <termination xsi:type="termination-duration" duration="2m"/>
                    </test>
                </test-group>

                 <test-group id="sleep-service-50-150ms-500-rps-2-min-4000-warmup">
                    <test testDescription="sleep-service-50-150ms">
                        <load xsi:type="load-rps" value="500" tickInterval="500" warmUpTime="1m"/>
                        <termination xsi:type="termination-duration" duration="2m"/>
                    </test>
                </test-group>

                <test-group id="sleep-service-50-150ms-500-rps-2-min-100-threads-warmup">
                    <test testDescription="sleep-service-50-150ms">
                        <load xsi:type="load-rps" value="500" maxThreadNumber="100" warmUpTime="1m" tickInterval="500"/>
                        <termination xsi:type="termination-duration" duration="2m"/>
                    </test>
                </test-group>

                <test-group id="sleep-service-50-150ms-500-rps-2-min-4000-threads">
                    <test testDescription="sleep-service-50-150ms">
                        <load xsi:type="load-rps" value="500" tickInterval="500" />
                        <termination xsi:type="termination-duration" duration="2m"/>
                    </test>
                </test-group>

                <test-group id="sleep-service-50-150ms-500-rps-2-min-100-threads">
                    <test testDescription="sleep-service-50-150ms">
                        <load xsi:type="load-rps" value="500" maxThreadNumber="100" tickInterval="500"/>
                        <termination xsi:type="termination-duration" duration="2m"/>
                    </test>
                </test-group>

            <!--Invocation-->

                <!--<test-group id="sleep-service-50ms-1-invocations">-->
                    <!--<test testDescription="sleep-service-50ms">-->
                        <!--<load xsi:type="load-invocation" exactcount="1" threads="1"/>-->
                        <!--<termination xsi:type="termination-iterations" iterations="1"/>-->
                    <!--</test>-->
                <!--</test-group>-->

                <!--<test-group id="sleep-service-50ms-100-invocations-5-threads">-->
                    <!--<test testDescription="sleep-service-50ms">-->
                        <!--<load xsi:type="load-invocation" exactcount="100" threads="5"/>-->
                        <!--<termination xsi:type="termination-iterations" iterations="100"/>-->
                    <!--</test>-->
                <!--</test-group>-->

            <!--&lt;!&ndash;Periodic&ndash;&gt;-->

                <!--<test-group id="sleep-service-50ms-1-invocations-5s-period">-->
                    <!--<test testDescription="sleep-service-50ms">-->
                        <!--<load xsi:type="load-invocation" exactcount="1" threads="1" period="5s"/>-->
                        <!--<termination xsi:type="termination-iterations" iterations="5"/>-->
                    <!--</test>-->
                <!--</test-group>-->

                <!--<test-group id="sleep-service-50ms-10-invocations-5-threads-5s-period">-->
                    <!--<test testDescription="sleep-service-50ms">-->
                        <!--<load xsi:type="load-invocation" exactcount="10" threads="5" period="5s"/>-->
                        <!--<termination xsi:type="termination-duration" duration="30s"/>-->
                    <!--</test>-->
                <!--</test-group>-->

            <!--&lt;!&ndash;Period less then invocation time&ndash;&gt;-->
                <!--<test-group id="sleep-service-50ms-10-invocations-1-thread-5s-period-1000-delay">-->
                    <!--<test testDescription="sleep-service-50ms">-->
                        <!--<load xsi:type="load-invocation" exactcount="10" threads="1" period="5s" delay="1000"/>-->
                        <!--<termination xsi:type="termination-duration" duration="30s"/>-->
                    <!--</test>-->
                <!--</test-group>-->


            <!--&lt;!&ndash;pulse&ndash;&gt;-->

                <!--<test-group id="pulse-service-30000-500-10-threads-5-min">-->
                    <!--<test testDescription="pulse-service-30000-500">-->
                        <!--<load xsi:type="load-threads" count="10" tickInterval="500"/>-->
                        <!--<termination xsi:type="termination-duration" duration="5m"/>-->
                    <!--</test>-->
                <!--</test-group>-->


            <!--&lt;!&ndash;load-cpu&ndash;&gt;-->

                <!--<test-group id="load-cpu-service-10000000-5-min-50-thread">-->
                    <!--<test testDescription="load-cpu-service-10000000">-->
                        <!--<load xsi:type="load-threads" count="10" tickInterval="500"/>-->
                        <!--<termination xsi:type="termination-duration" duration="5m"/>-->
                    <!--</test>-->
                <!--</test-group>-->

                <!--<test-group id="load-cpu-service-10000000-5-min-50-threads">-->
                    <!--<test testDescription="load-cpu-service-10000000">-->
                        <!--<load xsi:type="load-threads" count="50" tickInterval="500"/>-->
                        <!--<termination xsi:type="termination-duration" duration="5m"/>-->
                    <!--</test>-->
                <!--</test-group>-->


            <!--&lt;!&ndash;allocate-memory&ndash;&gt;-->

                <!--<test-group id="allocate-memory-service-1000000x200-10-threads-5-min">-->
                    <!--<test testDescription="allocate-memory-service-1000000x200">-->
                        <!--<load xsi:type="load-threads" count="10" tickInterval="500"/>-->
                        <!--<termination xsi:type="termination-duration" duration="5m"/>-->
                    <!--</test>-->
                <!--</test-group>-->


            <!--&lt;!&ndash;TCP test&ndash;&gt;-->

                <!--<test-group id="tcp-service-10000-10-threads-5-min">-->
                    <!--<test testDescription="tcp-service-10000">-->
                        <!--<load xsi:type="load-threads" count="10" tickInterval="500"/>-->
                        <!--<termination xsi:type="termination-duration" duration="5m"/>-->
                    <!--</test>-->
                <!--</test-group>-->

            <!--&lt;!&ndash;RPS&ndash;&gt;-->

                <!--<test-group id="sleep-service-50-150ms-500-rps-5-min-10-threads">-->
                    <!--<test testDescription="sleep-service-50-150ms">-->
                        <!--<load xsi:type="load-rps" value="500" tickInterval="500"/>-->
                        <!--<termination xsi:type="termination-duration" duration="5m"/>-->
                    <!--</test>-->
                <!--</test-group>-->

            <!--&lt;!&ndash;RumpUpTps&ndash;&gt;-->
                <!--<test-group id="sleep-service-50-150ms-600-rump-up-tps-5-min">-->
                    <!--<test testDescription="sleep-service-50-150ms">-->
                        <!--<load xsi:type="load-tps" warmUpTime="100s" value="600" tickInterval="500"/>-->
                        <!--<termination xsi:type="termination-duration" duration="5m"/>-->
                    <!--</test>-->
                <!--</test-group>-->

            </test-suite>

            <report outputReportLocation="report.pdf">
                <session-comparators baselineId="115" strategy="worstCase">

                    <comparator-workload>
                        <decision-maker xsi:type="decision-maker-workload-throughput"
                                        fatalDeviationThreshold="0.8" warningDeviationThreshold="0.6"/>
                    </comparator-workload>

                    <comparator-monitoring>
                        <decision-maker xsi:type="decision-maker-monitoring-stddev"
                                        fatalDeviationThreshold="0.8" warningDeviationThreshold="0.6"/>
                    </comparator-monitoring>

                </session-comparators>
            </report>

        </configuration>


</beans:beans>